#include "eos.h"
#include "Controllers/Display/Drivers/eosILI9341LTDC.h"
#include "HAL/halTMR.h"
#include "HAL/halGPIO.h"

#include "stm32f4xx.h"
#include "stm32f4xx_ltdc.h"
#include "stm32f4xx_rcc.h"


// Parametres de la pantalla
//
#define MAX_COLUMNS          240
#define MAX_ROWS             320


using namespace eos;


/// ----------------------------------------------------------------------
/// \brief Constructor.
///
ILI9341LTDC_Driver::ILI9341LTDC_Driver() {

    screenWidth = MAX_COLUMNS;
    screenHeight = MAX_ROWS;
}


/// ----------------------------------------------------------------------
/// \brief Inicialitzacio.
///
void ILI9341LTDC_Driver::initialize() {

	// Inicialitza els pins del controlador LDTC
	//
	halGPIOInitializePin(ILI9341LTDC_HSYNC_PORT, ILI9341LTDC_HSYNC_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_VSYNC_PORT, ILI9341LTDC_VSYNC_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_DOTCLK_PORT, ILI9341LTDC_DOTCLK_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_R2_PORT, ILI9341LTDC_R2_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_R3_PORT, ILI9341LTDC_R3_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_R4_PORT, ILI9341LTDC_R4_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_R5_PORT, ILI9341LTDC_R5_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_R6_PORT, ILI9341LTDC_R6_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_R7_PORT, ILI9341LTDC_R7_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_G2_PORT, ILI9341LTDC_G2_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_G3_PORT, ILI9341LTDC_G3_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_G4_PORT, ILI9341LTDC_G4_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_G5_PORT, ILI9341LTDC_G5_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_G6_PORT, ILI9341LTDC_G6_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_G7_PORT, ILI9341LTDC_G7_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_B2_PORT, ILI9341LTDC_B2_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_B3_PORT, ILI9341LTDC_B3_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_B4_PORT, ILI9341LTDC_B4_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_B5_PORT, ILI9341LTDC_B5_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_B6_PORT, ILI9341LTDC_B6_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);
	halGPIOInitializePin(ILI9341LTDC_B7_PORT, ILI9341LTDC_B7_PIN, HAL_GPIO_PULLUPDN_NONE | HAL_GPIO_OPENDRAIN_DISABLED | HAL_GPIO_MODE_AF);

	halGPIOInitializeAlternatePin(ILI9341LTDC_HSYNC_PORT, ILI9341LTDC_HSYNC_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_VSYNC_PORT, ILI9341LTDC_VSYNC_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_DOTCLK_PORT, ILI9341LTDC_DOTCLK_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_R2_PORT, ILI9341LTDC_R2_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_R3_PORT, ILI9341LTDC_R3_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_R4_PORT, ILI9341LTDC_R4_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_R5_PORT, ILI9341LTDC_R5_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_R6_PORT, ILI9341LTDC_R6_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_R7_PORT, ILI9341LTDC_R7_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_G2_PORT, ILI9341LTDC_G2_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_G3_PORT, ILI9341LTDC_G3_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_G4_PORT, ILI9341LTDC_G4_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_G5_PORT, ILI9341LTDC_G5_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_G6_PORT, ILI9341LTDC_G6_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_G7_PORT, ILI9341LTDC_G7_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_B2_PORT, ILI9341LTDC_B2_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_B3_PORT, ILI9341LTDC_B3_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_B4_PORT, ILI9341LTDC_B4_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_B5_PORT, ILI9341LTDC_B5_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_B6_PORT, ILI9341LTDC_B6_PIN, HAL_GPIO_AF_LTDC);
	halGPIOInitializeAlternatePin(ILI9341LTDC_B7_PORT, ILI9341LTDC_B7_PIN, HAL_GPIO_AF_LTDC);

	// Inicialitza els pins de la comunicacio serie
	//
	halGPIOSetPin(ILI9341LTDC_CS_PORT, ILI9341LTDC_CS_PIN);
	halGPIOInitializePinOutput(ILI9341LTDC_RS_PORT, ILI9341LTDC_RS_PIN);
	halGPIOInitializePinOutput(ILI9341LTDC_CS_PORT, ILI9341LTDC_CS_PIN);
	halGPIOInitializePinOutput(ILI9341LTDC_CLK_PORT, ILI9341LTDC_CLK_PIN);
	halGPIOInitializePinOutput(ILI9341LTDC_MOSI_PORT, ILI9341LTDC_MOSI_PIN);

	// Inicialitza el modul LDTC
	//
	RCC->APB2ENR |= RCC_APB2ENR_LTDCEN;

	LTDC_InitTypeDef ltdcInit;
	ltdcInit.LTDC_HSPolarity = LTDC_HSPolarity_AL;
	ltdcInit.LTDC_VSPolarity = LTDC_VSPolarity_AL;
	ltdcInit.LTDC_DEPolarity = LTDC_DEPolarity_AL;
	ltdcInit.LTDC_PCPolarity = LTDC_PCPolarity_IPC;
	ltdcInit.LTDC_BackgroundRedValue = 0;
	ltdcInit.LTDC_BackgroundGreenValue = 0;
	ltdcInit.LTDC_BackgroundBlueValue = 0;
    ltdcInit.LTDC_HorizontalSync = 9;
    ltdcInit.LTDC_VerticalSync = 1;
    ltdcInit.LTDC_AccumulatedHBP = 29;
    ltdcInit.LTDC_AccumulatedVBP = 3;
    ltdcInit.LTDC_AccumulatedActiveW = 269;
    ltdcInit.LTDC_AccumulatedActiveH = 323;
    ltdcInit.LTDC_TotalWidth = 279;
    ltdcInit.LTDC_TotalHeigh = 327;

	/* Configure PLLSAI prescalers for LCD */
	/* Enable Pixel Clock */
	/* PLLSAI_VCO Input = HSE_VALUE/PLL_M = 1 Mhz */
	/* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAI_N = 192 Mhz */
	/* PLLLCDCLK = PLLSAI_VCO Output/PLLSAI_R = 192/4 = 96 Mhz */
	/* LTDC clock frequency = PLLLCDCLK / RCC_PLLSAIDivR = 96/4 = 24 Mhz */
	RCC_PLLSAIConfig(192, 7, 4);
	RCC_LTDCCLKDivConfig(RCC_PLLSAIDivR_Div4);

	/* Enable PLLSAI Clock */
    RCC_PLLSAICmd(ENABLE);

    /* Wait for PLLSAI activation */
	while (RCC_GetFlagStatus(RCC_FLAG_PLLSAIRDY) == RESET) {
	}

	LTDC_Init(&ltdcInit);
}


void ILI9341LTDC_Driver::shutdown() {

}


void ILI9341LTDC_Driver::clear(
	Color color) {

}

void ILI9341LTDC_Driver::setPixel(
	int16_t x,
	int16_t y,
	Color color) {

}
