// -----------------------------------------------------------------------
// Generated by FsmCompiler v1.1
// Finite state machine compiler tool
// Copyright 2015-2020 Rafael Serrano (rsr.openware@gmail.com)
//
// Warning. Don't touch. Changes will be overwritten!
//
// -----------------------------------------------------------------------

#ifndef __MACHINESTATE_H
#define __MACHINESTATE_H


#include "appMachineConfig.h"


namespace app {

    class Context;

    class State: public eos::FsmStateBase {
        protected:
            State(Context* context);
        public:
            virtual void enter();
            virtual void exit();
            virtual void transition_SW1Pressed();
            virtual void transition_SW2Pressed();
            virtual void transition_SW3Pressed();
    };

    class WaitingSW1: public State {
        public:
            WaitingSW1(Context* context);
        public:
            void enter() override;
            void transition_SW1Pressed() override;
    };

    class WaitingSW2: public State {
        public:
            WaitingSW2(Context* context);
        public:
            void enter() override;
            void transition_SW2Pressed() override;
    };

    class WaitingSW3: public State {
        public:
            WaitingSW3(Context* context);
        public:
            void enter() override;
            void transition_SW3Pressed() override;
    };

}


#endif // __MACHINESTATE_H
