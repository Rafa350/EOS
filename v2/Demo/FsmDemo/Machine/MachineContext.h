// -----------------------------------------------------------------------
// Generated by FsmCompiler v1.1
// Finite state machine compiler tool
// Copyright 2015-2020 Rafael Serrano (rsr.openware@gmail.com)
//
// Warning. Don't touch. Changes will be overwritten!
//
// -----------------------------------------------------------------------

#ifndef __MACHINECONTEXT_H
#define __MACHINECONTEXT_H


#include "appMachineConfig.h"


namespace app {

    class State;

    class MyStateMachine;

    class Context: public eos::FsmContextBase {
        public:
            enum class StateID {
                WaitingSW1,
                WaitingSW2,
                WaitingSW3
            };
        private:
            State* states[3];
        private:
            MyStateMachine* owner;
        public:
            Context(MyStateMachine* owner);
        public:
            State* getStateInstance(StateID id);
            MyStateMachine* getOwner();
            void start();
            void end();
            void transition_SW1Pressed(const SW1Arguments* args)();
            void transition_SW2Pressed();
            void transition_SW3Pressed();
    };

}


#endif // __MACHINECONTEXT_H
